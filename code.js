function dongtab() {
    const notificationModal = document.getElementById('notificationModal');
    notificationModal.style.display = 'none'; 
}
function autoCloseModal() {
    setTimeout(dongtab, 1500);
}
document.addEventListener('DOMContentLoaded', function() {
    autoCloseModal();
});
var nameTopBxh = [];
var codenhap = 0;
let money = 10000; 
let betAmount = 10; 
let timer; 
let timeLeft = 15; 
let isPlaying = false; 
let currentBet = null; 
const leaderboard = [
    { name: 'Tao kh√¥ng c√≥ nghi·ªán üò°', money: 1000000, logo: 'img/1.gif' },
    { name: 'h√¥m nay 1 t·ª∑ ng√†y mai 1000 t·ª∑ ü§§', money: 500000, logo: 'img/2.gif' },
    { name: 'H·∫øt xu b√°n v·ª£ ch∆°i ti·∫øp üòµ', money: 200000, logo: 'img/3.gif' },
    { name: 'N·ª£ m·∫π 1 cƒÉn nh√† üò®', money: 100000, logo: 'img/4.gif' },
    { name: 'Ngh√®o v∆∞·ª£t kh√≥ üòç', money: 50000, logo: 'img/5.gif' },
    { name: 'Mai con mua xe cho m·∫π üòé', money: 25000, logo: 'img/6.gif' },
    { name: '√Çm 5k n·ªØa l√† n·ª£ 1 t·ª∑ üò≠', money: 10000, logo: 'img/7.gif' }
];
let playerName = document.getElementById('usernameInput').value.trim(); 

function startTimer() {
    timeLeft = 15; 
    document.getElementById('time').innerText = timeLeft; 

    clearInterval(timer); 
    timer = setInterval(function () {
        timeLeft--; 
        document.getElementById('time').innerText = timeLeft; 

        if (timeLeft <= 0) {
            clearInterval(timer);
            playGame(currentBet); 
            startTimer(); 
        } else if (timeLeft === 3) {
            document.getElementById('loadingImage').style.display = 'block';
        }
    }, 1000); 
}

document.getElementById('betRed').addEventListener('click', function () {
    if (!isPlaying && timeLeft > 3) {
        waitForResult('red');
    } else if (timeLeft <= 3) {
        alert("B·∫°n ch·ªâ c√≥ th·ªÉ ƒë·∫∑t c∆∞·ª£c khi c√≤n l·∫°i h∆°n 3 gi√¢y!");
    }
});

document.getElementById('betBlack').addEventListener('click', function () {
    if (!isPlaying && timeLeft > 3) {
        waitForResult('black');
    } else if (timeLeft <= 3) {
        alert("B·∫°n ch·ªâ c√≥ th·ªÉ ƒë·∫∑t c∆∞·ª£c khi c√≤n l·∫°i h∆°n 3 gi√¢y!");
    }
});

document.getElementById('codeButton').addEventListener('click', function () {
    const code = document.getElementById('codeInput').value;
    redeemCode(code);
});

function redeemCode(code) {
    if(codenhap >=5 && code === 'cuongle' && code === 'adminvip' && code === 'chienthan207' ){
        document.getElementById('code').style.display = 'block';
        document.getElementById('code').innerText = 'B·∫°n ƒë√£ h·∫øt s·ªë l·∫ßn nh·∫≠p code. ƒê√£ Thua';
    }
    else if (code === 'cuongle') { 
        money += 10000;
        document.getElementById('code').style.display = 'block';
        document.getElementById('code').innerText = 'B·∫°n ƒë√£ nh·∫≠n 10.000 xu!';
        document.getElementById('money').innerText = money; 
        codenhap++;
        updateLeaderboard();
    }
    else if (code === 'admincuongle') { 
        money += 100000000;
        document.getElementById('code').style.display = 'block';
        document.getElementById('code').innerText = 'B·∫°n ƒë√£ nh·∫≠n 100 tri·ªáu xu!';
        document.getElementById('money').innerText = money; 
        codenhap++;
        updateLeaderboard();
    }
    else if (code === 'chienthan207') { 
        money += 10000;
        document.getElementById('code').style.display = 'block';
        document.getElementById('code').innerText = 'B·∫°n ƒë√£ nh·∫≠n 10.000 xu!';
        document.getElementById('money').innerText = money; 
        updateLeaderboard();
        codenhap++;
    }
    else if (code === 'nhanthuong') { 
        money += 10000;
        document.getElementById('code').style.display = 'block';
        document.getElementById('code').innerText = 'B·∫°n ƒë√£ nh·∫≠n 10.000 xu!';
        document.getElementById('money').innerText = money; 
        updateLeaderboard();
        codenhap++;
    }
    else if (code === 'codenehehe') { 
        money += 10000;
        document.getElementById('code').style.display = 'block';
        document.getElementById('code').innerText = 'B·∫°n ƒë√£ nh·∫≠n 10.000 xu!';
        document.getElementById('money').innerText = money; 
        updateLeaderboard();
        codenhap++;
    }
    else if (code === 'abccodevip') { 
        money += 10000;
        document.getElementById('code').style.display = 'block';
        document.getElementById('code').innerText = 'B·∫°n ƒë√£ nh·∫≠n 10.000 xu!';
        document.getElementById('money').innerText = money; 
        updateLeaderboard();
        codenhap++;
    }
    else if(code === 'adminvip'){
        money += 1000000;
        document.getElementById('code').style.display = 'block';
        document.getElementById('code').innerText = 'B·∫°n ƒë√£ nh·∫≠n 1.000.000 xu!';
        document.getElementById('money').innerText = money; 
        updateLeaderboard()
        codenhap++;
    } else {
        document.getElementById('code').style.display = 'block';
        document.getElementById('code').innerText = 'M√£ kh√¥ng h·ª£p l·ªá!';
    }
    document.getElementById('codeInput').value = ''; 
    setTimeout(() => {
        document.getElementById('code').style.display = 'none';
    }, 4000);
}

function waitForResult(bet) {
    playerName = document.getElementById('usernameInput').value.trim(); 
    if (playerName === '') {
        alert('Vui l√≤ng nh·∫≠p t√™n c·ªßa b·∫°n!');
        return;
    }

    betAmount = parseInt(document.getElementById('betAmountInput').value); 
    if (isNaN(betAmount) || betAmount <= 0) {
        alert('Vui l√≤ng nh·∫≠p s·ªë xu c∆∞·ª£c h·ª£p l·ªá!');
        return;
    }

    if (money < betAmount) {
        alert('B·∫°n kh√¥ng ƒë·ªß xu ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c s·ªë xu n√†y!');
        return;
    }

    currentBet = bet; 
    isPlaying = true; 
    money -= betAmount; 
    document.getElementById('money').innerText = money; 
    document.getElementById('result').innerText = `B·∫°n ƒë√£ ƒë·∫∑t ${betAmount} v√†o ${bet === 'red' ? 'ƒê·ªè' : 'ƒêen'}`;
}

function playGame(bet) {
    document.getElementById('loadingImage').style.display = 'none';

    const randomResult1 = Math.random() < 0.5 ? 'red' : 'black';
    const randomResult2 = Math.random() < 0.5 ? 'red' : 'black';
    const randomResult3 = Math.random() < 0.5 ? 'red' : 'black';

    document.getElementById('dice').innerHTML = `
        <div class="circle" style="background-color: ${randomResult1}; width: 50px; height: 50px; border-radius: 50%; display: inline-block;"></div>
        <div class="circle" style="background-color: ${randomResult2}; width: 50px; height: 50px; border-radius: 50%; display: inline-block;"></div>
        <div class="circle" style="background-color: ${randomResult3}; width: 50px; height: 50px; border-radius: 50%; display: inline-block;"></div>
    `;

    const results = [randomResult1, randomResult2, randomResult3];
    const matchingResults = results.filter(result => result === bet).length;

    if (matchingResults >= 2) {
        const winnings = betAmount * 2; 
        money += winnings;
        document.getElementById('result').innerText = `B·∫°n ƒë√£ th·∫Øng ${winnings} xu!`;
    } else {
        if (currentBet !== null) {
            document.getElementById('result').innerText = 'B·∫°n ƒë√£ thua!';
        }
    }


    document.getElementById('money').innerText = money;
    isPlaying = false; 
    currentBet = null; 
    updateLeaderboard(); 

    setTimeout(() => {
        document.getElementById('result').innerText = ''; 
    }, 5000); 
}

function formatMoney(amount) {
    return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","); 
}

function updateLeaderboard() {
    let playerInLeaderboard = leaderboard.find(player => player.name === playerName);

    if (playerInLeaderboard) {
        playerInLeaderboard.money = money;
    } else {
        const lowestRankedPlayer = leaderboard[leaderboard.length - 1];
        if (money > lowestRankedPlayer.money) {
            leaderboard.pop(); 
            leaderboard.push({ name: playerName, money: money, logo: lowestRankedPlayer.logo });
        }
    }

    leaderboard.sort((a, b) => b.money - a.money);
    const topPlayers = leaderboard.slice(0, 7);
    topPlayers.forEach((player, index) => {
        player.logo = `img/${index + 1}.gif`; 
    });
    topPlayers.forEach(player => {
        if (player.name !== playerName && player.money > 0) {
            const randomAdjustment = Math.random() < 0.5 ? 40000 : -10000; 
            player.money += randomAdjustment;

            if (player.money < 0) {
                player.money = 0;
            }
        }
    });

    if (topPlayers.length > 1 && topPlayers[0].name === playerName) {
        const secondPlayer = topPlayers[1];
        const bonusAdjustment = Math.random() < 0.5 ? 1000000 + money * 0.3 : -500000 + 0.1 * money; 
        secondPlayer.money += bonusAdjustment;

        if (secondPlayer.money < 0) {
            secondPlayer.money = 0;
        }
    }

    topPlayers.forEach(player => {
        if (player.money === 0 && player.name !== playerName) {
            const randomNames = ["Minh", "Ho√†ng", "Ph√∫c", "Linh", "Trang", "Nam","ƒê·ªìng","Em iu anh","Nhon Nh·∫∑t","Tr√πm ƒë√° top","Tr√°nh ra top 1 c·ªßa t","Chi·∫øn th·∫ßn","B√¨nh"];
            const newName = randomNames[Math.floor(Math.random() * randomNames.length)];

            leaderboard.push({ name: newName, money: 50000, logo: `img/${topPlayers.length + 1}.gif` });
        }
    });

    leaderboard.sort((a, b) => b.money - a.money);
    
    const updatedTopPlayers = leaderboard.slice(0, 7);

    const leaderboardContainer = document.getElementById('leaderboard');
    leaderboardContainer.innerHTML = ''; 

    updatedTopPlayers.forEach(player => {
        const playerDiv = document.createElement('div');
        
        const playerNameStyle = player.name === playerName 
            ? 'style="color: black; font-weight: bold;"' 
            : '';
        const formattedMoney = formatMoney(player.money);
        const moneyStyle = 'style="font-weight: bold; color: #ffcc00; background-color: #333; padding: 5px; border-radius: 5px;"'; // Stylish money display

        playerDiv.innerHTML = `
            <img src="${player.logo}" alt="${player.name}" style="width: 120px; height: 120px; border-radius: 50%;" />
            <strong ${playerNameStyle}>${player.name}</strong> <span ${moneyStyle}>${formattedMoney} xu</span>
        `;
        nameTopBxh.push(playerDiv);
        leaderboardContainer.appendChild(playerDiv);
    });

    leaderboard.splice(7);
}

window.onload = function () {
    startTimer(); 
    updateLeaderboard(); 
};
const chatBox = document.getElementById('chatBox');
const userInput = document.getElementById('userInput');
const sendButton = document.getElementById('sendButton');

function addMessage(text, sender) {
    const messageDiv = document.createElement('div');
    messageDiv.classList.add('message', sender);
    messageDiv.innerHTML = text; 
    chatBox.appendChild(messageDiv);
    chatBox.scrollTop = chatBox.scrollHeight; 
    if (chatBox.children.length > 100) {
        chatBox.removeChild(chatBox.firstChild); 
    }
}

function botChat() {
    const botMessages = [
        "Ch√†o b·∫°n! H√¥m nay b·∫°n c√≥ kh·ªèe kh√¥ng?",
        "Th·ªùi ti·∫øt h√¥m nay ƒë·∫πp gh√™, ƒëi ch∆°i kh√¥ng?",
        "B·∫°n c√≥ th√≠ch l·∫≠p tr√¨nh kh√¥ng? M√¨nh ƒëang h·ªçc ƒë√¢y!",
        "ƒêi ƒë√° ph√≤ khum :)) Haha, nh·ªõ c·∫©n th·∫≠n nh√©!",
        "H√†nh tr√¨nh l√™n top 1 web c√≥ v·∫ª kh√≥ nh·ªâ? Ai c√πng tham gia kh√¥ng?",
        "ƒêen r·ªìi, ƒë·∫∑t ƒëi th√¥i! Kh√¥ng th·ª≠ th√¨ sao bi·∫øt ƒë∆∞·ª£c!",
        "V√°n n√†y ƒë·ªè, m√¨nh c∆∞·ª£c h·∫øt! B·∫°n c∆∞·ª£c g√¨?",
        "Web n√†y c√≥ r√∫t ti·ªÅn ƒë∆∞·ª£c kh√¥ng nh·ªâ? Ai bi·∫øt kh√¥ng?",
        "T s·ª£ ƒëi t√π qu√° b√¢y ∆°i, ch∆°i c√≥ ch·ª´ng m·ª±c nha!",
        "Ch√°n qu√°, t n·ª£ 1 t·ª∑ r, ph·∫£i t√¨m c√°ch ki·∫øm l·∫°i!",
        "ƒêi ƒÉn s√°ng kh√¥ng b√¢y? ƒÇn u·ªëng cho c√≥ s·ª©c ch∆°i n√†o!",
        "Nghi·ªán game r·ªìi, kh√¥ng d·ª©t ra ƒë∆∞·ª£c lu√¥n! Help!",
        "Ai cho ti·ªÅn t ch∆°i v·ªõi? Ch√°n qu√° ƒëi!",
        "gifcode: cuongle nh·∫≠n ƒë∆∞·ª£c 10k xu √°! Ai d√πng ch∆∞a?",
        "C√≥ code nh·∫≠n dc 1 t·ª∑ √° ae, ai m√≤ ra ch∆∞a?",
        "Ngh√®o r·ªìi, hic, ph·∫£i c·ªë g·∫Øng th√¥i!",
        "Web b·ªãp, c·∫£m gi√°c nh∆∞ b·ªã l·ª´a √°! M√°aaaaaa!",
        "ƒê* m·ªçe web l*n, ch∆°i m√† c·ª© b·ªã thua!",
        "ƒê·∫∑t c∆∞·ª£c c√≥ ph·∫£i l√† m·ªôt tr√≤ ch∆°i may r·ªßi kh√¥ng nh·ªâ? Ai nghƒ© sao?",
        "Ch∆°i ƒëen ƒë·ªè m√† kh√¥ng qu·∫£n l√Ω v·ªën th√¨ d·ªÖ l·∫Øm, ph·∫£i c·∫©n th·∫≠n nha!",
        "B·∫°n c√≥ chi·∫øn l∆∞·ª£c n√†o khi ch∆°i game n√†y kh√¥ng? Chia s·∫ª ƒëi!",
        "Ch∆°i th·ª≠ v√°n n√†y xem sao, c√≥ th·ªÉ s·∫Ω th·∫Øng l·ªõn! Ai c∆∞·ª£c kh√¥ng?",
        "C·∫£m gi√°c th·∫Øng c∆∞·ª£c th·∫≠t ƒë√£, nh∆∞ng c≈©ng ph·∫£i c·∫©n th·∫≠n nh√©!",
        "C√≥ ai ƒë√£ t·ª´ng thua h·∫øt ti·ªÅn v√¨ ƒë·∫∑t c∆∞·ª£c ch∆∞a? Chia s·∫ª ƒëi!",
        "Ch∆°i game ƒëen ƒë·ªè c√≥ th·ªÉ g√¢y nghi·ªán ƒë·∫•y, ai c·∫£m th·∫•y th·∫ø kh√¥ng?",
        "Th·ªùi ƒëi·ªÉm n√†o l√† th·ªùi ƒëi·ªÉm t·ªët ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c nh·ªâ?",
        "C√≥ ai bi·∫øt m·∫πo n√†o ƒë·ªÉ th·∫Øng trong game n√†y kh√¥ng? Chia s·∫ª v·ªõi m√¨nh!",
        "ƒê·∫∑t c∆∞·ª£c nhi·ªÅu qu√° c√≥ th·ªÉ ·∫£nh h∆∞·ªüng t·ªõi t√¢m l√Ω ƒë·∫•y, nh·ªõ gi·ªØ b√¨nh tƒ©nh!",
        "B·∫°n c√≥ th·∫•y nh·ªØng ng∆∞·ªùi th·∫Øng c∆∞·ª£c th∆∞·ªùng c√≥ m·∫πo g√¨ kh√¥ng?",
        "Chia s·∫ª kinh nghi·ªám ch∆°i game c·ªßa b·∫°n ƒëi! M√¨nh c≈©ng mu·ªën h·ªçc h·ªèi!",
        "M·ªói l·∫ßn ƒë·∫∑t c∆∞·ª£c l√† m·ªôt l·∫ßn th·ª≠ th√°ch b·∫£n th√¢n! C·ªë l√™n n√†o!",
        "C√≥ khi n√†o b·∫°n ƒë·∫∑t c∆∞·ª£c m√† kh√¥ng bi·∫øt m√¨nh ƒëang l√†m g√¨ kh√¥ng?",
        "C·∫£m gi√°c h·ªìi h·ªôp khi ƒë·∫∑t c∆∞·ª£c th·∫≠t kh√≥ t·∫£! Ai ƒë·ªìng √Ω kh√¥ng?",
        "C√≥ ai ƒë√£ t·ª´ng th·∫Øng l·ªõn trong m·ªôt v√°n c∆∞·ª£c kh√¥ng? Chuy·ªán g√¨ x·∫£y ra v·∫≠y?",
        "Ch∆°i game n√†y c·∫ßn ph·∫£i ki√™n nh·∫´n v√† b√¨nh tƒ©nh! Ai c√≥ b√≠ quy·∫øt kh√¥ng?",
        "B·∫°n c√≥ th∆∞·ªùng tham gia c√°c gi·∫£i ƒë·∫•u ƒë·∫∑t c∆∞·ª£c kh√¥ng? Th√∫ v·ªã gh√™!",
        "N√™n ƒë·∫∑t c∆∞·ª£c m·ªôt c√°ch c√≥ tr√°ch nhi·ªám nh√©! ƒê·ª´ng qu√° ƒë√† nha!",
        "C√≥ khi n√†o b·∫°n ƒë·∫∑t c∆∞·ª£c ch·ªâ v√¨ c·∫£m h·ª©ng nh·∫•t th·ªùi kh√¥ng?",
        "M·ªói l·∫ßn thua l√† m·ªôt b√†i h·ªçc qu√Ω gi√°! H√£y nh·ªõ ƒëi·ªÅu ƒë√≥!",
        "Ch∆°i ƒëen ƒë·ªè, b·∫°n tin v√†o v·∫≠n may hay k·ªπ nƒÉng? Ai c√≥ √Ω ki·∫øn?",
        "Th·ªùi gian t·ªët nh·∫•t ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c l√† khi n√†o nh·ªâ?",
        "C√≥ ai bi·∫øt c√°ch ph√¢n t√≠ch t√¨nh hu·ªëng trong game kh√¥ng? Gi√∫p m√¨nh v·ªõi!",
        "Ch∆°i m·ªôt m√¨nh hay ch∆°i c√πng b·∫°n b√® th√¨ vui h∆°n nh·ªâ? Th√≠ch c√πng nhau h∆°n!",
        "ƒê·ª´ng ƒë·ªÉ c·∫£m x√∫c chi ph·ªëi quy·∫øt ƒë·ªãnh ƒë·∫∑t c∆∞·ª£c c·ªßa b·∫°n! Gi·ªØ b√¨nh tƒ©nh nh√©!",
        "C√≥ khi n√†o b·∫°n c·∫£m th·∫•y h·ªëi h·∫≠n v√¨ ƒë√£ ƒë·∫∑t c∆∞·ª£c kh√¥ng? Chia s·∫ª ƒëi!",
        "H√£y lu√¥n chu·∫©n b·ªã tinh th·∫ßn cho c·∫£ th·∫Øng v√† thua! Ai ƒë·ªìng √Ω kh√¥ng?",
        "C√≥ nh·ªØng l√∫c th·∫Øng nh∆∞ng v·∫´n c·∫£m th·∫•y tr·ªëng r·ªóng, b·∫°n c√≥ th·∫•y v·∫≠y kh√¥ng?",
        "Ch∆°i game n√†y c√≥ th·ªÉ t·∫°o ra nhi·ªÅu k·ª∑ ni·ªám ƒë√°ng nh·ªõ! Ai c√≥ k·ª∑ ni·ªám vui?",
        "B·∫°n c√≥ nghƒ© r·∫±ng may m·∫Øn c≈©ng l√† m·ªôt y·∫øu t·ªë quan tr·ªçng kh√¥ng?",
        "C√≥ khi n√†o b·∫°n c·∫£m th·∫•y m√¨nh ƒë√£ ch∆°i qu√° l√¢u kh√¥ng?",
        "H√£y nh·ªõ r·∫±ng, ch∆°i ch·ªâ ƒë·ªÉ vui ch·ª© ƒë·ª´ng qu√° nghi√™m tr·ªçng!",
        "C√≥ ai ƒë√£ t·ª´ng ƒë·∫∑t c∆∞·ª£c theo linh c·∫£m kh√¥ng? Ai tin v√†o linh c·∫£m?",
        "M·ªói v√°n c∆∞·ª£c ƒë·ªÅu c√≥ c√¢u chuy·ªán ri√™ng c·ªßa n√≥! K·ªÉ cho m√¨nh nghe ƒëi!",
        "C√≥ khi n√†o b·∫°n mu·ªën d·ª´ng l·∫°i nh∆∞ng l·∫°i kh√¥ng l√†m ƒë∆∞·ª£c kh√¥ng?",
        "Ch∆°i ƒëen ƒë·ªè, c√≥ khi n√†o b·∫°n nghƒ© ƒë·∫øn nh·ªØng ƒëi·ªÅu kh√°c ngo√†i ti·ªÅn kh√¥ng?",
        "N√™n t√¨m hi·ªÉu tr∆∞·ªõc v·ªÅ c√°c quy t·∫Øc c·ªßa game tr∆∞·ªõc khi ch∆°i nh√©!",
        "B·∫°n c√≥ th∆∞·ªùng xuy√™n theo d√µi c√°c tr·∫≠n ƒë·∫•u l·ªõn kh√¥ng? Ai c√≥ ƒë·ªôi y√™u th√≠ch?",
        "C·∫£m gi√°c khi ƒë·∫∑t c∆∞·ª£c v√†o ƒë·ªôi m√¨nh y√™u th√≠ch th·∫≠t ph·∫•n kh√≠ch!"
    ];


    const randomBotNames = leaderboard.map(player => player.name); 

    const additionalBotNames = ["D∆∞∆°ng", "C∆∞·ªùng", "Long","An","H√πng", "Th·∫Øng", "Con nghi·ªán"]; 

    const allBotNames = randomBotNames.concat(additionalBotNames); 

    const randomMessage = botMessages[Math.floor(Math.random() * botMessages.length)];
    const randomBotName = allBotNames[Math.floor(Math.random() * allBotNames.length)];

    if (Math.random() < 0.05) { 
        addAdminMessage("Gitcode:Cuongle ƒë·ªÉ nh·∫≠n 10k xu n√® ae ∆°i !!!!üòâüòâ");
    }
    if (Math.random() < 0.04) { 
        addAdminMessage("Gitcode:codenehehe ƒë·ªÉ nh·∫≠n 10k xu n√® ae ∆°i !!!!üòâüòâ");
    }
    if (Math.random() < 0.01) { 
        addAdminMessage("Gitcode:abccodevip ƒë·ªÉ nh·∫≠n 10k xu n√® ae ∆°i !!!!üòâüòâ");
    }
    if (Math.random() < 0.03) { 
        addAdminMessage("Gitcode:nhanthuong ƒë·ªÉ nh·∫≠n 10k xu n√® ae ∆°i !!!!üòâüòâ");
    }
    if (Math.random() < 0.02) { 
        addAdminMessage("Gitcode:chienthan207 ƒë·ªÉ nh·∫≠n 10k xu n√® ae ∆°i !!!!üòâüòâ");
    }
    if (Math.random() < 0.005) { 
        addAdminMessage("Gitcode:adminvip ƒë·ªÉ nh·∫≠n 1tr xu n√® ae ∆°i !!!!üòçüòçüòç");
    }
    if (Math.random() < 0.001) { 
        addAdminMessage("Gitcode:admincuongle ƒë·ªÉ nh·∫≠n 100tr xu n√® ae ∆°i !!!!üòçüòçüòç");
    }
    const matchingPlayerIndex = leaderboard.findIndex(player => player.name === randomBotName);
    let logoHtml = '';
    if (matchingPlayerIndex !== -1) {
        const rank = matchingPlayerIndex + 1; 
        const logo = `img/${rank}.gif`; 
        logoHtml = `<img src="${logo}" alt="Rank ${rank}" style="width: 60px; border-radius: 50%;">`;
    } else {
        logoHtml = `<img src="img/8.png" alt="Default Logo" style="width: 60px; border-radius: 50%;">`;
    }

    addMessage(logoHtml + `<strong style="font-size: 1.5em;">${randomBotName}:</strong> <span style="font-size: 1.5em;">${randomMessage}</span>`, 'bot');
}


sendButton.addEventListener('click', () => {
    const userMessage = userInput.value;
    if (userMessage) {
        addMessage(userMessage, 'user');
        userInput.value = ''; 
        setTimeout(botChat, 1000); 
    }
});

userInput.addEventListener('keypress', (event) => {
    if (event.key === 'Enter') {
        sendButton.click();
    }
});

setInterval(botChat, 1700);
function addAdminMessage(text) {
    const adminMessage = text || "Th√¥ng b√°o t·ª´ ADMIN: H√£y ch∆°i c√≥ tr√°ch nhi·ªám!";
    const adminLogoHtml = `<img src="img/admin.png" alt="ADMIN" style="width: 50px; height: 50px; border-radius: 50%; margin-right: 10px;">`;

    const messageDiv = document.createElement('div');
    messageDiv.classList.add('message', 'admin');
    messageDiv.innerHTML = `
        <div style="display: flex; align-items: center; background-color: rgba(255, 0, 0, 0.1); padding: 10px; border-radius: 5px;">
            ${adminLogoHtml}
            <strong style="color: red; font-size: 2.2em; font-weight: bold;">ADMIN:</strong>
            <span style="color: red; font-size: 2.2em; font-weight: bold; margin-left: 5px;">${adminMessage}</span>
        </div>
    `;
    
    chatBox.appendChild(messageDiv);
    chatBox.scrollTop = chatBox.scrollHeight; 

    if (chatBox.children.length > 100) {
        chatBox.removeChild(chatBox.firstChild); 
    }
}
